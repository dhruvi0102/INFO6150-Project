{"ast":null,"code":"var _jsxFileName = \"D:\\\\Northeastern\\\\Semester 3\\\\Web design\\\\web-project-master\\\\web-project-master\\\\client\\\\src\\\\User\\\\components\\\\ResetForm.jsx\";\nimport React, { useState, useRef, useEffect, Fragment } from 'react';\nimport { AiOutlineCheckCircle } from 'react-icons/ai';\nimport { useParams, useHistory } from 'react-router-dom';\nimport gsap from 'gsap';\nimport axios from '../../axios';\nimport PasswordField from './PasswordField';\nimport { ValidateInput } from '../../shared/utils/validations';\nimport Layout from '../../shared/components/Layout/Layout';\nimport AuthButton from '../../shared/components/Buttons/AuthButton';\nconst ResetForm = () => {\n  const token = useParams().token;\n  let authForm = useRef(null);\n  const history = useHistory();\n  const [isLoading, setIsLoadin] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [reset, setReset] = useState({\n    password: '',\n    password2: '',\n    token: token\n  });\n\n  //Gsap entry animation\n  useEffect(() => {\n    let tl = gsap.timeline();\n    tl.from(authForm, 1.5, {\n      scale: 0.5,\n      opacity: 0\n    });\n  }, []);\n  const {\n    password,\n    password2\n  } = reset;\n\n  //onChange + input validation\n  const onHandleChange = e => {\n    e.preventDefault();\n    const {\n      name,\n      value\n    } = e.target;\n    let error = ValidateInput(name, value);\n    setErrors(error);\n    setReset({\n      ...reset,\n      [name]: value\n    });\n  };\n\n  //Check password and password2 - post new password and token to db\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    if (password !== password2) {\n      setErrors({\n        msg: 'Password and confirm password does not match'\n      });\n    } else {\n      setIsLoadin(true);\n      axios.post('/users/update', reset, {\n        'Content-Type': 'application/json'\n      }).then(res => {\n        setIsLoadin(false);\n        history.push('/auth');\n      }).catch(err => {\n        setIsLoadin(false);\n        console.log(err);\n      });\n      setReset({\n        password: '',\n        password2: ''\n      });\n    }\n    ;\n  };\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-container\",\n    ref: el => authForm = el,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Reset Passowrd Form\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Enter your new password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"auth-form\",\n    onSubmit: onHandleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-fied\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PasswordField, {\n    onHandleChange: onHandleChange,\n    value: password,\n    errors: errors.password,\n    passLength: password.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-fied\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password2\",\n    placeholder: \"Confirm password...\",\n    value: password2,\n    onChange: onHandleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }), errors.password2 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 46\n    }\n  }, errors.password2), password2.length >= 6 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"checked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 52\n    }\n  }, /*#__PURE__*/React.createElement(AiOutlineCheckCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 75\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-fied\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(AuthButton, {\n    value: \"Update Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 31\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Update Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }), errors.msg && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 48\n    }\n  }, errors.msg))))));\n};\nexport default ResetForm;","map":{"version":3,"names":["React","useState","useRef","useEffect","Fragment","AiOutlineCheckCircle","useParams","useHistory","gsap","axios","PasswordField","ValidateInput","Layout","AuthButton","ResetForm","token","authForm","history","isLoading","setIsLoadin","errors","setErrors","reset","setReset","password","password2","tl","timeline","from","scale","opacity","onHandleChange","e","preventDefault","name","value","target","error","onHandleSubmit","msg","post","then","res","push","catch","err","console","log","el","length"],"sources":["D:/Northeastern/Semester 3/Web design/web-project-master/web-project-master/client/src/User/components/ResetForm.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect, Fragment } from 'react';\nimport { AiOutlineCheckCircle } from 'react-icons/ai';\nimport { useParams, useHistory } from 'react-router-dom';\nimport gsap from 'gsap';\nimport axios from '../../axios';\n\nimport PasswordField from './PasswordField';\nimport { ValidateInput } from '../../shared/utils/validations';\nimport Layout from '../../shared/components/Layout/Layout';\nimport AuthButton from '../../shared/components/Buttons/AuthButton';\n\nconst ResetForm = () => {\n\n    const token = useParams().token;\n    let authForm = useRef(null);\n    const history = useHistory(); \n    const [ isLoading, setIsLoadin ] = useState(false);\n    const [ errors, setErrors ] = useState({});\n    const [reset, setReset ] = useState({\n        password: '',\n        password2: '',\n        token: token\n    });\n\n    //Gsap entry animation\n    useEffect(() => {\n        let tl = gsap.timeline();\n        tl.from(authForm, 1.5, {scale: 0.5, opacity: 0})\n    }, [])\n\n    const { password, password2 } = reset;\n\n    //onChange + input validation\n    const onHandleChange = (e) => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        let error = ValidateInput(name, value);\n        setErrors(error)\n        setReset({...reset, [name]: value});\n    };\n\n    //Check password and password2 - post new password and token to db\n    const onHandleSubmit = (e) => {\n        e.preventDefault();\n        if(password !== password2){\n            setErrors({msg:'Password and confirm password does not match'})\n        }else{   \n            setIsLoadin(true);\n            axios.post('/users/update', reset,\n            {'Content-Type': 'application/json'})\n                .then(res => {\n                 setIsLoadin(false);\n                 history.push('/auth')\n                }).catch(err => {\n                 setIsLoadin(false);\n                 console.log(err);\n                });\n            setReset({\n                password: '',\n                password2: ''\n            });\n        };\n    };\n\n    return(\n        <Layout>\n            <div className='auth-container' ref={el => ( authForm = el)}>\n                <h3>Reset Passowrd Form</h3>\n                <p>Enter your new password</p>\n                <form className='auth-form' onSubmit={onHandleSubmit}>\n                    <div className='input-fied'>\n                        <PasswordField onHandleChange={onHandleChange}\n                                        value={password}\n                                        errors={errors.password}\n                                        passLength={password.length}/>\n                    </div>\n                    <div className='input-fied'>\n                        <input type=\"password\" name='password2' placeholder='Confirm password...'\n                        value={password2} onChange={onHandleChange} required/>\n                        {errors.password2 && <p className='errors'>{errors.password2}</p>}\n                        { password2.length >= 6 && <p className='checked'><AiOutlineCheckCircle /></p>}\n                    </div>\n                    <div className='input-fied'>\n                        {\n                            isLoading \n                            ? <AuthButton value='Update Password'/>\n                            :\n                            <Fragment>\n                                <input type=\"submit\" value='Update Password'/>\n                                {errors.msg && <p className='errors'>{errors.msg}</p>}\n                            </Fragment>\n                        }          \n                    </div>\n                </form>\n            </div>\n        </Layout>\n    )\n}\n\nexport default ResetForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Northeastern\\\\Semester 3\\\\Web design\\\\web-project-master\\\\web-project-master\\\\client\\\\src\\\\User\\\\pages\\\\ResetPage.jsx\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AiOutlineCheckCircle } from 'react-icons/ai';\nimport { FaRegArrowAltCircleLeft } from 'react-icons/fa';\nimport axios from '../../axios';\nimport gsap from 'gsap';\nimport { ValidateEmail, ValidateInput } from '../../shared/utils/validations';\nimport Layout from '../../shared/components/Layout/Layout';\nconst ResetPage = props => {\n  let authForm = useRef(null);\n  let settings = useRef(null);\n  let tl = useRef();\n  const [errors, setErrors] = useState({});\n  const [emailToReset, setEmail] = useState({\n    email: ''\n  });\n  const history = useHistory();\n  const {\n    email\n  } = emailToReset;\n\n  //Gsap entry animation\n  useEffect(() => {\n    tl.current = gsap.timeline();\n    tl.current.fromTo(authForm, 1.5, {\n      scale: 0.5,\n      opacity: 0\n    }, {\n      scale: 1,\n      opacity: 1\n    }).from(settings, 1, {\n      y: 20,\n      opacity: 0\n    }, 0.5);\n  }, [tl]);\n\n  //onCahnge + validate input\n  const onHandleChange = e => {\n    e.preventDefault();\n    const {\n      name,\n      value\n    } = e.target;\n    let error = ValidateInput(name, value);\n    setErrors(error);\n    setEmail({\n      ...emailToReset,\n      [name]: value\n    });\n  };\n\n  //post new email to db\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    axios.post('/emails/reset', emailToReset, {\n      'Content-Type': 'application/json'\n    }).then(res => {}).catch(err => {\n      console.log(err);\n    });\n    setEmail({\n      email: ''\n    });\n    history.push('/');\n  };\n  const backToLogin = () => {\n    history.goBack();\n  };\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings\",\n    onClick: backToLogin,\n    ref: el => settings = el,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaRegArrowAltCircleLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 44\n    }\n  }, \"Move Back\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-container\",\n    ref: el => authForm = el,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Reset password\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"We will send you reset link per E-mail\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"auth-form\",\n    onSubmit: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-fied\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"E-mail...\",\n    value: email,\n    onChange: onHandleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 42\n    }\n  }, errors.email), ValidateEmail.test(email) && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"checked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 55\n    }\n  }, /*#__PURE__*/React.createElement(AiOutlineCheckCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 78\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-fied\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Reset Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  })))));\n};\nexport default ResetPage;","map":{"version":3,"names":["React","useState","useRef","useEffect","useHistory","AiOutlineCheckCircle","FaRegArrowAltCircleLeft","axios","gsap","ValidateEmail","ValidateInput","Layout","ResetPage","props","authForm","settings","tl","errors","setErrors","emailToReset","setEmail","email","history","current","timeline","fromTo","scale","opacity","from","y","onHandleChange","e","preventDefault","name","value","target","error","onSubmitHandler","post","then","res","catch","err","console","log","push","backToLogin","goBack","el","test"],"sources":["D:/Northeastern/Semester 3/Web design/web-project-master/web-project-master/client/src/User/pages/ResetPage.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AiOutlineCheckCircle } from 'react-icons/ai';\nimport { FaRegArrowAltCircleLeft } from 'react-icons/fa';\nimport axios from '../../axios';\nimport gsap from 'gsap';\n\nimport { ValidateEmail, ValidateInput } from '../../shared/utils/validations';\nimport Layout from '../../shared/components/Layout/Layout';\n\nconst ResetPage = (props) => {\n\n    let authForm = useRef(null); \n    let settings = useRef(null);\n    let tl = useRef()\n    const [ errors, setErrors ] = useState({});\n    const [ emailToReset, setEmail ] = useState({email: ''});\n    const history = useHistory();\n\n    const { email } = emailToReset\n\n    //Gsap entry animation\n    useEffect(() => {\n        tl.current = gsap.timeline();\n        tl.current.fromTo(authForm, 1.5, {scale: 0.5, opacity: 0}, {scale: 1, opacity: 1})\n                  .from(settings, 1, {y: 20, opacity: 0}, 0.5)\n    }, [tl]);\n\n    //onCahnge + validate input\n    const onHandleChange = (e) => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        let error = ValidateInput(name, value);\n        setErrors(error)\n        setEmail({...emailToReset, [name]: value})\n    };\n\n    //post new email to db\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n            axios.post('/emails/reset', emailToReset, \n            {'Content-Type': 'application/json'})\n                 .then(res => {               \n            }).catch(err => {\n                  console.log(err);\n            });\n        setEmail({email: ''});\n        history.push('/');\n    };\n\n    const backToLogin = () => {\n        history.goBack()\n    };\n\n    return(\n        <Layout>\n            <div className='settings' onClick={backToLogin} ref={ el => ( settings = el )}>\n                <FaRegArrowAltCircleLeft /><span>Move Back</span></div>\n            <div className='auth-container' ref={el => ( authForm = el)}>\n                <h3>Reset password</h3>\n                <p>We will send you reset link per E-mail</p>\n                <form className='auth-form' onSubmit={onSubmitHandler}>\n                    <div className='input-fied'>\n                        <input type=\"email\" name='email' placeholder='E-mail...'\n                        value={email} onChange={onHandleChange} required/>        \n                        {errors.email && <p className='errors'>{errors.email}</p>}\n                        {ValidateEmail.test(email) && <p className='checked'><AiOutlineCheckCircle /></p>}\n                    </div>\n                    <div className='input-fied'>     \n                        <input type=\"submit\" value='Reset Password'/>\n                    </div>\n                </form>\n            </div>\n        </Layout>\n        )\n}\n\nexport default ResetPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
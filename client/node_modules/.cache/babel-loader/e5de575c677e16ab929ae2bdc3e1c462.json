{"ast":null,"code":"'use strict';\n\nvar utils = require('../utils');\n\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = ['baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer', 'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName', 'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent', 'httpsAgent', 'cancelToken', 'socketPath'];\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n  var axiosKeys = valueFromConfig2Keys.concat(mergeDeepPropertiesKeys).concat(defaultToConfig2Keys);\n  var otherKeys = Object.keys(config2).filter(function filterAxiosKeys(key) {\n    return axiosKeys.indexOf(key) === -1;\n  });\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n  return config;\n};","map":{"version":3,"names":["utils","require","module","exports","mergeConfig","config1","config2","config","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","forEach","valueFromConfig2","prop","mergeDeepProperties","isObject","deepMerge","defaultToConfig2","axiosKeys","concat","otherKeys","Object","keys","filter","filterAxiosKeys","key","indexOf","otherKeysDefaultToConfig2"],"sources":["C:/Users/dhruv/OneDrive/Documents/GitHub/INFO6150-Project/client/node_modules/axios/lib/core/mergeConfig.js"],"sourcesContent":["'use strict';\r\n\r\nvar utils = require('../utils');\r\n\r\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\r\nmodule.exports = function mergeConfig(config1, config2) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  config2 = config2 || {};\r\n  var config = {};\r\n\r\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\r\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\r\n  var defaultToConfig2Keys = [\r\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\r\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\r\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\r\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\r\n    'httpsAgent', 'cancelToken', 'socketPath'\r\n  ];\r\n\r\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\r\n    if (typeof config2[prop] !== 'undefined') {\r\n      config[prop] = config2[prop];\r\n    }\r\n  });\r\n\r\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\r\n    if (utils.isObject(config2[prop])) {\r\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\r\n    } else if (typeof config2[prop] !== 'undefined') {\r\n      config[prop] = config2[prop];\r\n    } else if (utils.isObject(config1[prop])) {\r\n      config[prop] = utils.deepMerge(config1[prop]);\r\n    } else if (typeof config1[prop] !== 'undefined') {\r\n      config[prop] = config1[prop];\r\n    }\r\n  });\r\n\r\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\r\n    if (typeof config2[prop] !== 'undefined') {\r\n      config[prop] = config2[prop];\r\n    } else if (typeof config1[prop] !== 'undefined') {\r\n      config[prop] = config1[prop];\r\n    }\r\n  });\r\n\r\n  var axiosKeys = valueFromConfig2Keys\r\n    .concat(mergeDeepPropertiesKeys)\r\n    .concat(defaultToConfig2Keys);\r\n\r\n  var otherKeys = Object\r\n    .keys(config2)\r\n    .filter(function filterAxiosKeys(key) {\r\n      return axiosKeys.indexOf(key) === -1;\r\n    });\r\n\r\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\r\n    if (typeof config2[prop] !== 'undefined') {\r\n      config[prop] = config2[prop];\r\n    } else if (typeof config1[prop] !== 'undefined') {\r\n      config[prop] = config1[prop];\r\n    }\r\n  });\r\n\r\n  return config;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}